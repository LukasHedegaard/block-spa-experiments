region: &region
  "us-east-1"
#  "eu-west-1"
#  "us-east-2"
#  "eu-central-1"
#  "ap-northeast-1"
#  "ap-southeast-1"

provisioner:
  type: sagemaker_pytorch
  aws_region: *region
  job_name_base: "spa"
  inputs_paths: # multiple key-pairs allowed here, see entry_point file how to use them
    train: "s3://applied-ml/lukas-morsing/block_movement_pruning/mnli_data/"
    bert-base-uncased: "s3://applied-ml/lukas-morsing/block_movement_pruning/bert-base-uncased/"
  #instance_type: ml.p3.8xlarge  # 4xNVIDIA tesla V100, 64GB,  12$/h on demand
  instance_type: ml.p3.2xlarge  #   NVIDIA tesla V100, 16GB,  3$/h on demand
  #instance_type: ml.p2.xlarge   #   NVIDIA tesla k80,  12GB,  0.9$/h on demand
  #instance_type: ml.g4dn.xlarge  #   NVIDIA T4 Tensor Core, 16GB 0.5$/h on demand
  #instance_type: ml.g4dn.12xlarge # 4xNVIDIA T4 Tensor Core, 64GB, 3.8$/h on demand
  #instance_type: ml.c5.xlarge
  dependencies: ["block_movement_pruning", "emmental", "mlops", "bert-base-uncased"]
  entry_point: ./remote/entrypoints/mnli_entry_point.py #
  # define framework version
  #  framework_version: "1.9.1"
  #  py_version: py38
  #Alternatively, instead of a python and framework version, use a custom docker image:
  docker_image_uri: 679792626450.dkr.ecr.us-east-1.amazonaws.com/block_movement_pruning:latest

  use_spot_instances: False
  # Tags for cost tracking and more
  allow_dirty_git: True
  tags:
    expcode: "ml-research-structured-pruning-adapters"
    purpose: "development"
    entity: "mlops"

# out_dir: &out_dir
#   /opt/ml/checkpoints/

trackers:
 - type: wandb
   run_id_dir: "/opt/ml/checkpoints/"
   project_name: block_movement_pruning
   team: applied-machine-learning
   is_sweep: False
